image: $SKA_K8S_TOOLS_BUILD_DEPLOY

variables:
  GIT_SUBMODULE_STRATEGY: recursive

workflow:
  name: '$CI_PIPELINE_NAME'
  
stages:
  - lint
  - build
  - pages
  - test
  - scan
  - publish

include:

  # Python packages build, lint, test and publish
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python.gitlab-ci.yml'

  # .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

  # changelog release page
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/changelog.gitlab-ci.yml'

  # Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs.gitlab-ci.yml'

  # .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

  # Jupyter notebook linting and testing
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/notebook.gitlab-ci.yml'

  # OCI image
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/oci-image.gitlab-ci.yml'

  # Release
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/release.gitlab-ci.yml'

# Ensure doc failures are non-fatal to gitlab pipelines
docs-build:
  allow_failure: true

docs-build-rtd:
  allow_failure: true

# Disable OCI jobs for pipeline performance, re-enable if int-tests is
# ever interacted with through OCI
oci-image-lint:
  rules:
    - when: never

oci-image-build:
  rules:
    - when: never

oci-image-publish:
  rules:
    - when: never
