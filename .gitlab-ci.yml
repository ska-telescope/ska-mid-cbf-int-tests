image: $SKA_K8S_TOOLS_BUILD_DEPLOY

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  MINIKUBE: "false"
  TARGET_SITE: psi
  RUNNER_TAG: k8srunner-psi-mid #Choose between k8srunner-psi-mid and ska-k8srunner-za-itf
  TANGO_HOST: databaseds-tango-base:10000
  CLUSTER_DOMAIN: "cluster.local" #Choose between cluster.local and miditf.internal.skao.int
  K8S_TIMEOUT: 800s
  USE_DEV_BUILD: "true"
  CONTAINER_SCANNING_DISABLED: 'true' # to disable the container scanning


workflow:
  name: '$CI_PIPELINE_NAME'
  
stages:
  - lint
  - build
  - on_demand_psi
  - pages
  - test
  - scan
  - publish
  - cleanup

include:

  # Python packages build, lint, test and publish
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python.gitlab-ci.yml'

  # Helm Charts
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/helm-chart.gitlab-ci.yml'

  # .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

  # changelog release page
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/changelog.gitlab-ci.yml'

  # deploy steps to psi mid
  - local: "/.gitlab/ci/psi-mid.gitlab-ci.yml"

  # Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs.gitlab-ci.yml'

  # .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

  # Jupyter notebook linting and testing
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/notebook.gitlab-ci.yml'

  # OCI image
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/oci-image.gitlab-ci.yml'

  # Release
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/release.gitlab-ci.yml'

# disable dev build job
python-build-for-development:
  rules:
    - when: never

# disable publish to gitlab until necessary to import
python-publish-to-gitlab:
  rules:
    - when: never

# Ensure doc failures are non-fatal to gitlab pipelines
docs-build:
  allow_failure: true

docs-build-rtd:
  allow_failure: true

# Disable OCI jobs for pipeline performance, re-enable if need to import images
# for data collection or verification
oci-image-lint:
  rules:
    - when: never

oci-image-build:
  rules:
    - when: never

oci-image-publish:
  rules:
    - when: never

# disable notebook-test since only used for prototyping
notebook-test:
  rules:
    - when: never

# allow python-test failure temporarily (for CIP-3440) until understanding of
# what python-test needs to do
python-test:
  allow_failure: true
