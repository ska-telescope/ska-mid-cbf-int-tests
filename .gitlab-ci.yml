image: $SKA_K8S_TOOLS_BUILD_DEPLOY

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  TARGET_SITE: psi
  RUNNER_TAG: k8srunner-psi-mid 
  TANGO_HOST: databaseds-tango-base:10000
  CLUSTER_DOMAIN: "cluster.local"
  K8S_TIMEOUT: 800s

workflow:
  name: '$CI_PIPELINE_NAME'
  
stages:
  - lint
  - build
  - on_demand_psi
  - pages
  - test
  - log-collector
  - scan
  - publish
  - cleanup

include:

  # Python packages build, lint, test and publish
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python.gitlab-ci.yml'

  # Helm Charts
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/helm-chart.gitlab-ci.yml'

  # .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

  # changelog release page
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/changelog.gitlab-ci.yml'

  # deploy steps to psi mid
  - local: "/.gitlab/ci/psi-mid.gitlab-ci.yml"

  # Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs.gitlab-ci.yml'

  # .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

  # Jupyter notebook linting and testing
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/notebook.gitlab-ci.yml'

  # OCI image
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/oci-image.gitlab-ci.yml'

  # Release
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/release.gitlab-ci.yml'

# disable dev hash build
python-build-for-development:
  rules:
    - when: never

# disable publish to gitlab until necessary to import
python-publish-to-gitlab:
  rules:
    - when: never

# Ensure doc failures are non-fatal to gitlab pipelines
docs-build:
  allow_failure: true

docs-build-rtd:
  allow_failure: true

# Disable OCI jobs for pipeline performance, re-enable if need to import images
# for data collection or verification
oci-image-lint:
  rules:
    - when: never

oci-image-build:
  rules:
    - when: never

oci-image-publish:
  rules:
    - when: never

# disable notebook-test since only used for prototyping
notebook-test:
  rules:
    - when: never

python-test:
  extends:
    - .mid
  tags:
    - $RUNNER_TAG
  rules:
    - if: $TARGET_SITE == "psi" && $CI_PIPELINE_SOURCE == "schedule"
      needs:
        - job: psi-mid-on-demand-deploy
    - if: $TARGET_SITE == "psi" && $CI_PIPELINE_SOURCE != "schedule"
      when: manual
      needs:
        - job: psi-mid-on-demand-deploy
  allow_failure: true

log-collector:
  stage: log-collector
  extends:
    - .mid
  tags:
    - $RUNNER_TAG
  before_script:
    - apt update
    - apt install -y util-linux
  script:
    - ./scripts/log_collection/collect_namespace_pod_logs.sh
    - ./scripts/log_collection/summarize_log_levels.sh
  needs:
    - job: python-test
  artifacts:
    paths:
    - logs/*.log
    - logs/log_level_summary.txt
  allow_failure: true
