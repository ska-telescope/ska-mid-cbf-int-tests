.mid:
  variables:
    CONFIG: mid
    HELM_RELEASE: "test-$CI_PIPELINE_ID"
    KUBE_NAMESPACE: "ci-$CI_PROJECT_NAME-$CI_PIPELINE_ID-$GITLAB_USER_LOGIN"

.deploy:
  variables:
    K8S_AUTH_NAMESPACES: "$KUBE_NAMESPACE"
    K8S_AUTH_SERVICE_ACCOUNT: "ci-svc-int-tests-$CI_PIPELINE_ID"
    SKA_TANGO_ARCHIVER: "false"
    VALUES: values.yaml
    CHART_FILE: "charts/ska-mid-cbf-int-tests/Chart.yaml"
  script:
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - echo "Make config dump"
    - make vars
    - make k8s-namespace KUBE_NAMESPACE=$KUBE_NAMESPACE
    - make k8s-namespace-credentials
    - |
      if [ "$K8S_INSTALL_FROM_CAR" != "true" ]; then
       echo "Install charts with name $HELM_RELEASE and path K8S_UMBRELLA_CHART_PATH"
       make k8s-install-chart
      else
        echo "Install charts from CAR"
        make k8s-install-chart-car
      fi
    - echo "Get namespace resources"
    - make k8s-get
    - echo "Wait namespace resources"
    - make k8s-wait

.info:
  variables:
    K8S_CHART: "ska-$CONFIG"
  script:
    - echo "Get namespace resources"
    - make k8s-get
    - make k8s-info

.cleanup:
  stage: cleanup
  variables:
    K8S_CHART: "ska-$CONFIG"
  script: &cleanup_script
    - echo $CI_JOB_NAME - $CI_JOB_STAGE
    - echo "Make config dump" ; make vars
    - make k8s-uninstall-chart || true
    - |
      if [ "$KEEP_NAMESPACE" != "true" ]; then
        make k8s-delete-namespace
      fi

.redeploy:
  extends:
    - .deploy
  before_script: *cleanup_script